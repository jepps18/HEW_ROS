<launch>
  <!-- Make sure simulated time is used -->
  <!--param name="use_sim_time" value="true"/-->


<!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find effort_controllers)/worlds/simple_bot_hw.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- URDF -->
  <param name="robot_description" command="$(find xacro)/xacro '$(find effort_controllers)/test/simple_bot.xacro'"/>

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf -model simple_bot -param robot_description"/>

  <!-- ROS controllers -->
  <!--rosparam command="load" file="$(find effort_controllers)/test/simple_bot_controllers.yaml" /-->

  <!-- Robot hardware -->
  <!--node name="simple_bot_hw" pkg="effort_controllers" type="simple_bot_hw"/-->

  <!-- Start controllers -->
  <!--node name="controller_spawner" pkg="controller_manager" type="spawner" output="screen" args="position_controller joint_state_controller" /-->

  <!-- Just to see the robot in RViz for "visual debugging" -->
  <!--node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/-->
</launch>
